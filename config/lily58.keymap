/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

// To practice explicit layer - &none between layers instead of &transfer

/*
 * Future would be cool to have following
 * 1. Automatic plover activation based on grouping
 * 2. Automatic plover disable (maybe manual exit/pause would be better)
 */

/ {
	keymap {
		compatible = "zmk,keymap";

// |  ESC  |  1  |  2  |  3   |  4   |  5   |                 |  6   |  7    |  8    |  9   |   0   |  DEL  |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                 |  Y   |  U    |  I    |  O   |   P   |  BSPC |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                 |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   [    ||  ]    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | RET  | LOWER  || RAISE | SPACE | BSPC | MENU  |
		default_layer {
			bindings = <
&kp ESC    &kp N1  &kp N2 &kp N3    &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8     &kp N9   &kp N0     &kp DEL
&kp TAB    &kp Q   &kp W  &kp E     &kp R     &kp T                        &kp Y      &kp U     &kp I      &kp O    &kp P      &kp BSPC
&kp LCTRL  &kp A   &kp S  &kp D     &kp F     &kp G                        &kp H      &kp J     &kp K      &kp L    &kp SEMI   &kp SQT
&kp LSHFT  &kp Z   &kp X  &kp C     &kp V     &kp B    &kp LBKT  &kp RBKT  &kp N      &kp M     &kp COMMA  &kp DOT  & kp FSLH  & kp RSHFT
                          &kp LALT  &kp LGUI  &kp RET  &mo 1     &mo 2     &kp SPACE  &kp BSPC  &kp RGUI
			>;
		};

//  1 - Activated by left thumb - SYMBOLS AND F-KEYS
// | F1 | F2 | F3 | F4 | F5 | F6 |        | F7 | F8 | F9 | F10 | F11 | F12 |
// | `  |    |    |    |    |    |        |    | -  | =  | [   | ]   | "|" |
// |    | !  | @  | #  | $  | %  |        | ^  | &  | *  | (   | )   | \   |
// |    |    |    |    |    |    |   ||   | _  | +  | {  | }   |     |
//                     |    |    |   ||   |    |
		lower_layer {
			bindings = <
&kp none  &kp none  &kp none  &kp none  &kp none  &kp none                      &kp none  &kp none  &kp none  &kp none  &kp none  &kp none
&kp none  &kp none  &kp none  &kp none  &kp none  &kp none                      &kp none  &kp none  &kp none  &kp none  &kp none  &kp none
&kp none  &kp none  &kp none  &kp none  &kp none  &kp none                      &kp none  &kp none  &kp none  &kp none  &kp none  &kp none
&kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none
                              &kp none  &kp none  &kp none  &mo none  &kp none  &kp none  &kp none  &kp none
			>;
		};

// 2 - Activated by right thumb - MOVEMENT AND SPECIALS
// |         | BT_1    | BT_2 | BT_3 | BT_4 | BT_5 |          |        |       |       |        |       | PR_SCN |
// | OUT_USB | OUT_BLE |      |      |      |      |          | HOME   | PG_DN | PG_UP | END    |       | M_PLAY |
// |         |         |      |      |      |      |          |  <-    |   v   |   ^   |  ->    |       | VOL_UP |
// |         |         |      |      |      |      |    ||    | M_PREV | MENU  |       | M_NEXT |       | VOL_DN |
//                            |      |      |      |    ||    |        |       |       |
		raise_layer {
			bindings = <
&kp none  &kp none  &kp none  &kp none  &kp none  &kp none                      &kp none  &kp none  &kp none  &kp none  &kp none  &kp none
&kp none  &kp none  &kp none  &kp none  &kp none  &kp none                      &kp none  &kp none  &kp none  &kp none  &kp none  &kp none
&kp none  &kp none  &kp none  &kp none  &kp none  &kp none                      &kp none  &kp none  &kp none  &kp none  &kp none  &kp none
&kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none  &kp none
                              &kp none  &kp none  &kp none  &mo none  &kp none  &kp none  &kp none  &kp none
			>;
		};
	};
};
